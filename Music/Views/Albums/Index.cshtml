@model IEnumerable<Music.Models.Album>

@{
    ViewBag.Title = "Index";
}

<h2>Albums List</h2>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })

    @using (Html.BeginForm(new {@class = "form-inline" }))
    {
    <p>
        Title: @Html.TextBox("SearchString") 
        <input type="submit" value="Filter" class="btn btn-success"/>
    </p>
    }
    
</p>

@{ 
    var grid = new WebGrid(
        Model, rowsPerPage: 5,
        defaultSort: "Title",
        columnNames: new[] { "Title", "Genre", "Artist", "Price", "Likes" }
        );
}

@grid.GetHtml(

    tableStyle: "table",
    fillEmptyRows: false,
    mode: WebGridPagerModes.All,
    columns: grid.Columns(
        grid.Column("Title", header: "Title"),
        grid.Column("Artist.Name", header: "Artist"),
        grid.Column("Genre.Name", header: "Genre"),
        grid.Column("Price", header: "Price"/*, format: (item) => String.Format("{0:0.00}", item.Price)*/),
        grid.Column("Likes", header: "Likes"),
        grid.Column(header: "Actions", format: (item) =>
        new HtmlString(
            Html.ActionLink("Like", "AddLike", new { id = item.AlbumID }, new { @class = "btn btn-primary", @style = "border-radius:6px 0 0 6px" }).ToString()
            +
             Html.ActionLink(" + Playlist", "../Playlists/AddToPlaylist", new { id = item.AlbumID }, new { @class = "btn btn-info", @style = "border-radius:0" }).ToString()
            +
            Html.ActionLink("Edit", "Edit", new { id = item.AlbumID }, new { @class = "btn btn-success", @style = "border-radius:0" }).ToString()
            +
            Html.ActionLink("Details", "Details", new { id = item.AlbumID }, new { @class = "btn btn-warning", @style = "border-radius: 0" }).ToString()
            +
            Html.ActionLink("Delete", "Delete", new { id = item.AlbumID }, new { @class = "btn btn-danger", @style = "border-radius:0 6px 6px 0" }).ToString()
            )
        )
    )
)

@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Artist)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Genre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Artist.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Genre.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td class="btn-group btn-group-sm">
            @Html.ActionLink("Edit", "Edit", new { id = item.AlbumID }, new {@class="btn btn-success", @style="border-radius:6px 0 0 6px" })
            @Html.ActionLink("Details", "Details", new { id = item.AlbumID }, new {@class ="btn btn-warning", @style = "border-radius: 0" })
            @Html.ActionLink("Delete", "Delete", new { id = item.AlbumID }, new {@class="btn btn-danger", @style="border-radius:0 6px 6px 0"}) 
        </td>
    </tr>
}
</table>*@